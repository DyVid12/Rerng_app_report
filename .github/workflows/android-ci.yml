name: Android CI Build

on:
  push:
    branches:
      - "dev-*"
      - "prd-*"
      - "master"
      - "development"
      - "ravit"

permissions:
  actions: read
  contents: read

jobs:
  build:
    name: Build VisitMe APK
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: /usr/local/lib/android/sdk
      GRADLE_USER_HOME: ${{ github.workspace }}/.gradle
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      KEY_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Save Keystore file directly from GitHub Secrets
      - name: Save Keystore
        run: echo "${{ secrets.KEYSTORE_FILE }}" > app/rerng_app.jks

      # Step 3: Set up JDK 17 for Android build
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      # Step 4: Install Android SDK components
      - name: Install Android SDK components
        run: |
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      # Step 5: Accept Android SDK licenses
      - name: Accept Licenses
        run: |
          yes | sdkmanager --licenses || true
          mkdir -p $ANDROID_HOME/licenses
          echo -e "24333f8a63b6825ea9c5514f83c2829b004d1fee" > $ANDROID_HOME/licenses/android-sdk-license

      # Step 6: Grant execution permission to Gradle wrapper
      - name: Grant Execution Permission
        run: chmod +x ./gradlew

      # Step 7: Build the APK (Release version)
      - name: Build Release APK
        run: ./gradlew assembleRelease

      # Step 8: Debug build output to confirm APK creation
      - name: Debug build output
        run: ls -R app/build/outputs/

      # Step 9: Copy APK to the root directory
      - name: Copy APK to root
        run: |
          if [ -f app/build/outputs/apk/release/app-release.apk ]; then
            cp app/build/outputs/apk/release/app-release.apk rerng_app.apk
          else
            echo "APK not found. Build failed or APK path is incorrect."
            exit 1
          fi

      # Step 10: Upload APK as an artifact
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rerng_app
          path: rerng_app.apk
